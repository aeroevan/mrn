// Code generated by protoc-gen-go.
// source: modes.proto
// DO NOT EDIT!

package mrn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ModeSMessage_AddrType int32

const (
	ModeSMessage_UNKNOWN        ModeSMessage_AddrType = 0
	ModeSMessage_ADSB_ICAO      ModeSMessage_AddrType = 1
	ModeSMessage_ADSB_ICAO_NT   ModeSMessage_AddrType = 2
	ModeSMessage_ADSR_ICAO      ModeSMessage_AddrType = 3
	ModeSMessage_TISB_ICAO      ModeSMessage_AddrType = 4
	ModeSMessage_ADSB_OTHER     ModeSMessage_AddrType = 5
	ModeSMessage_ADSR_OTHER     ModeSMessage_AddrType = 6
	ModeSMessage_TISB_TRACKFILE ModeSMessage_AddrType = 7
	ModeSMessage_TISB_OTHER     ModeSMessage_AddrType = 8
)

var ModeSMessage_AddrType_name = map[int32]string{
	0: "UNKNOWN",
	1: "ADSB_ICAO",
	2: "ADSB_ICAO_NT",
	3: "ADSR_ICAO",
	4: "TISB_ICAO",
	5: "ADSB_OTHER",
	6: "ADSR_OTHER",
	7: "TISB_TRACKFILE",
	8: "TISB_OTHER",
}
var ModeSMessage_AddrType_value = map[string]int32{
	"UNKNOWN":        0,
	"ADSB_ICAO":      1,
	"ADSB_ICAO_NT":   2,
	"ADSR_ICAO":      3,
	"TISB_ICAO":      4,
	"ADSB_OTHER":     5,
	"ADSR_OTHER":     6,
	"TISB_TRACKFILE": 7,
	"TISB_OTHER":     8,
}

func (x ModeSMessage_AddrType) String() string {
	return proto.EnumName(ModeSMessage_AddrType_name, int32(x))
}
func (ModeSMessage_AddrType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

type ModeSMessage_AltitudeUnit int32

const (
	ModeSMessage_NO_ALTITUDE ModeSMessage_AltitudeUnit = 0
	ModeSMessage_FEET        ModeSMessage_AltitudeUnit = 1
	ModeSMessage_METERS      ModeSMessage_AltitudeUnit = 2
)

var ModeSMessage_AltitudeUnit_name = map[int32]string{
	0: "NO_ALTITUDE",
	1: "FEET",
	2: "METERS",
}
var ModeSMessage_AltitudeUnit_value = map[string]int32{
	"NO_ALTITUDE": 0,
	"FEET":        1,
	"METERS":      2,
}

func (x ModeSMessage_AltitudeUnit) String() string {
	return proto.EnumName(ModeSMessage_AltitudeUnit_name, int32(x))
}
func (ModeSMessage_AltitudeUnit) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 1} }

type ModeSMessage_AltitudeType int32

const (
	ModeSMessage_NO_ALTITUDE_TYPE ModeSMessage_AltitudeType = 0
	ModeSMessage_BAROMETRIC       ModeSMessage_AltitudeType = 1
	ModeSMessage_GNSS             ModeSMessage_AltitudeType = 2
)

var ModeSMessage_AltitudeType_name = map[int32]string{
	0: "NO_ALTITUDE_TYPE",
	1: "BAROMETRIC",
	2: "GNSS",
}
var ModeSMessage_AltitudeType_value = map[string]int32{
	"NO_ALTITUDE_TYPE": 0,
	"BAROMETRIC":       1,
	"GNSS":             2,
}

func (x ModeSMessage_AltitudeType) String() string {
	return proto.EnumName(ModeSMessage_AltitudeType_name, int32(x))
}
func (ModeSMessage_AltitudeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 2} }

type ModeSMessage_HeadingType int32

const (
	ModeSMessage_NO_HEADING_TYPE ModeSMessage_HeadingType = 0
	ModeSMessage_TRUE            ModeSMessage_HeadingType = 1
	ModeSMessage_MAGNETIC        ModeSMessage_HeadingType = 2
)

var ModeSMessage_HeadingType_name = map[int32]string{
	0: "NO_HEADING_TYPE",
	1: "TRUE",
	2: "MAGNETIC",
}
var ModeSMessage_HeadingType_value = map[string]int32{
	"NO_HEADING_TYPE": 0,
	"TRUE":            1,
	"MAGNETIC":        2,
}

func (x ModeSMessage_HeadingType) String() string {
	return proto.EnumName(ModeSMessage_HeadingType_name, int32(x))
}
func (ModeSMessage_HeadingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 3} }

type ModeSMessage_SpeedType int32

const (
	ModeSMessage_NONE        ModeSMessage_SpeedType = 0
	ModeSMessage_GROUNDSPEED ModeSMessage_SpeedType = 1
	ModeSMessage_IAS         ModeSMessage_SpeedType = 2
	ModeSMessage_TAS         ModeSMessage_SpeedType = 3
)

var ModeSMessage_SpeedType_name = map[int32]string{
	0: "NONE",
	1: "GROUNDSPEED",
	2: "IAS",
	3: "TAS",
}
var ModeSMessage_SpeedType_value = map[string]int32{
	"NONE":        0,
	"GROUNDSPEED": 1,
	"IAS":         2,
	"TAS":         3,
}

func (x ModeSMessage_SpeedType) String() string {
	return proto.EnumName(ModeSMessage_SpeedType_name, int32(x))
}
func (ModeSMessage_SpeedType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 4} }

type ModeSMessage_AirGround int32

const (
	ModeSMessage_UNCERTAIN ModeSMessage_AirGround = 0
	ModeSMessage_INVALID   ModeSMessage_AirGround = 1
	ModeSMessage_GROUND    ModeSMessage_AirGround = 2
	ModeSMessage_AIRBORNE  ModeSMessage_AirGround = 3
)

var ModeSMessage_AirGround_name = map[int32]string{
	0: "UNCERTAIN",
	1: "INVALID",
	2: "GROUND",
	3: "AIRBORNE",
}
var ModeSMessage_AirGround_value = map[string]int32{
	"UNCERTAIN": 0,
	"INVALID":   1,
	"GROUND":    2,
	"AIRBORNE":  3,
}

func (x ModeSMessage_AirGround) String() string {
	return proto.EnumName(ModeSMessage_AirGround_name, int32(x))
}
func (ModeSMessage_AirGround) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 5} }

type ModeSMessage struct {
	// * Timestamp of the message
	Time *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	// * hex mode s address
	Addr string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	// * hex mode s type
	AddrType ModeSMessage_AddrType `protobuf:"varint,3,opt,name=addr_type,json=addrType,enum=mrn.ModeSMessage_AddrType" json:"addr_type,omitempty"`
	// * Binary message (corrected).
	Msg string `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	// * RSSI, in the range [0..1], as a fraction of full-scale power
	SignalLevel    float64                      `protobuf:"fixed64,5,opt,name=signal_level,json=signalLevel" json:"signal_level,omitempty"`
	Latitude       *google_protobuf.DoubleValue `protobuf:"bytes,6,opt,name=latitude" json:"latitude,omitempty"`
	Longitude      *google_protobuf.DoubleValue `protobuf:"bytes,7,opt,name=longitude" json:"longitude,omitempty"`
	Altitude       *google_protobuf.Int32Value  `protobuf:"bytes,8,opt,name=altitude" json:"altitude,omitempty"`
	AltitudeUnit   ModeSMessage_AltitudeUnit    `protobuf:"varint,9,opt,name=altitude_unit,json=altitudeUnit,enum=mrn.ModeSMessage_AltitudeUnit" json:"altitude_unit,omitempty"`
	AltitudeType   ModeSMessage_AltitudeType    `protobuf:"varint,10,opt,name=altitude_type,json=altitudeType,enum=mrn.ModeSMessage_AltitudeType" json:"altitude_type,omitempty"`
	GnssDelta      *google_protobuf.Int32Value  `protobuf:"bytes,11,opt,name=gnss_delta,json=gnssDelta" json:"gnss_delta,omitempty"`
	Heading        *google_protobuf.Int32Value  `protobuf:"bytes,12,opt,name=heading" json:"heading,omitempty"`
	HeadingType    ModeSMessage_HeadingType     `protobuf:"varint,13,opt,name=heading_type,json=headingType,enum=mrn.ModeSMessage_HeadingType" json:"heading_type,omitempty"`
	Speed          *google_protobuf.Int32Value  `protobuf:"bytes,14,opt,name=speed" json:"speed,omitempty"`
	SpeedType      ModeSMessage_SpeedType       `protobuf:"varint,15,opt,name=speed_type,json=speedType,enum=mrn.ModeSMessage_SpeedType" json:"speed_type,omitempty"`
	VertRate       *google_protobuf.Int32Value  `protobuf:"bytes,16,opt,name=vert_rate,json=vertRate" json:"vert_rate,omitempty"`
	VertRateSource ModeSMessage_AltitudeType    `protobuf:"varint,17,opt,name=vert_rate_source,json=vertRateSource,enum=mrn.ModeSMessage_AltitudeType" json:"vert_rate_source,omitempty"`
	Sqawk          *google_protobuf.StringValue `protobuf:"bytes,18,opt,name=sqawk" json:"sqawk,omitempty"`
	Callsign       *google_protobuf.StringValue `protobuf:"bytes,19,opt,name=callsign" json:"callsign,omitempty"`
	Airground      ModeSMessage_AirGround       `protobuf:"varint,20,opt,name=airground,enum=mrn.ModeSMessage_AirGround" json:"airground,omitempty"`
}

func (m *ModeSMessage) Reset()                    { *m = ModeSMessage{} }
func (m *ModeSMessage) String() string            { return proto.CompactTextString(m) }
func (*ModeSMessage) ProtoMessage()               {}
func (*ModeSMessage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ModeSMessage) GetTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ModeSMessage) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ModeSMessage) GetAddrType() ModeSMessage_AddrType {
	if m != nil {
		return m.AddrType
	}
	return ModeSMessage_UNKNOWN
}

func (m *ModeSMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ModeSMessage) GetSignalLevel() float64 {
	if m != nil {
		return m.SignalLevel
	}
	return 0
}

func (m *ModeSMessage) GetLatitude() *google_protobuf.DoubleValue {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *ModeSMessage) GetLongitude() *google_protobuf.DoubleValue {
	if m != nil {
		return m.Longitude
	}
	return nil
}

func (m *ModeSMessage) GetAltitude() *google_protobuf.Int32Value {
	if m != nil {
		return m.Altitude
	}
	return nil
}

func (m *ModeSMessage) GetAltitudeUnit() ModeSMessage_AltitudeUnit {
	if m != nil {
		return m.AltitudeUnit
	}
	return ModeSMessage_NO_ALTITUDE
}

func (m *ModeSMessage) GetAltitudeType() ModeSMessage_AltitudeType {
	if m != nil {
		return m.AltitudeType
	}
	return ModeSMessage_NO_ALTITUDE_TYPE
}

func (m *ModeSMessage) GetGnssDelta() *google_protobuf.Int32Value {
	if m != nil {
		return m.GnssDelta
	}
	return nil
}

func (m *ModeSMessage) GetHeading() *google_protobuf.Int32Value {
	if m != nil {
		return m.Heading
	}
	return nil
}

func (m *ModeSMessage) GetHeadingType() ModeSMessage_HeadingType {
	if m != nil {
		return m.HeadingType
	}
	return ModeSMessage_NO_HEADING_TYPE
}

func (m *ModeSMessage) GetSpeed() *google_protobuf.Int32Value {
	if m != nil {
		return m.Speed
	}
	return nil
}

func (m *ModeSMessage) GetSpeedType() ModeSMessage_SpeedType {
	if m != nil {
		return m.SpeedType
	}
	return ModeSMessage_NONE
}

func (m *ModeSMessage) GetVertRate() *google_protobuf.Int32Value {
	if m != nil {
		return m.VertRate
	}
	return nil
}

func (m *ModeSMessage) GetVertRateSource() ModeSMessage_AltitudeType {
	if m != nil {
		return m.VertRateSource
	}
	return ModeSMessage_NO_ALTITUDE_TYPE
}

func (m *ModeSMessage) GetSqawk() *google_protobuf.StringValue {
	if m != nil {
		return m.Sqawk
	}
	return nil
}

func (m *ModeSMessage) GetCallsign() *google_protobuf.StringValue {
	if m != nil {
		return m.Callsign
	}
	return nil
}

func (m *ModeSMessage) GetAirground() ModeSMessage_AirGround {
	if m != nil {
		return m.Airground
	}
	return ModeSMessage_UNCERTAIN
}

func init() {
	proto.RegisterType((*ModeSMessage)(nil), "mrn.ModeSMessage")
	proto.RegisterEnum("mrn.ModeSMessage_AddrType", ModeSMessage_AddrType_name, ModeSMessage_AddrType_value)
	proto.RegisterEnum("mrn.ModeSMessage_AltitudeUnit", ModeSMessage_AltitudeUnit_name, ModeSMessage_AltitudeUnit_value)
	proto.RegisterEnum("mrn.ModeSMessage_AltitudeType", ModeSMessage_AltitudeType_name, ModeSMessage_AltitudeType_value)
	proto.RegisterEnum("mrn.ModeSMessage_HeadingType", ModeSMessage_HeadingType_name, ModeSMessage_HeadingType_value)
	proto.RegisterEnum("mrn.ModeSMessage_SpeedType", ModeSMessage_SpeedType_name, ModeSMessage_SpeedType_value)
	proto.RegisterEnum("mrn.ModeSMessage_AirGround", ModeSMessage_AirGround_name, ModeSMessage_AirGround_value)
}

func init() { proto.RegisterFile("modes.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 781 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0x41, 0x8f, 0x9b, 0x46,
	0x14, 0xc7, 0x83, 0xed, 0x5d, 0xc3, 0x83, 0xf5, 0x4e, 0x27, 0x39, 0xa0, 0x4d, 0x9b, 0x6e, 0x7d,
	0xda, 0x13, 0x51, 0x37, 0x8a, 0xb2, 0xdd, 0x43, 0x55, 0xd6, 0x10, 0x2f, 0x8a, 0x0d, 0xd1, 0x30,
	0x4e, 0xd5, 0x13, 0x9a, 0x0d, 0x53, 0x82, 0x8a, 0xc1, 0x05, 0x9c, 0x28, 0x9f, 0xa4, 0x52, 0x3f,
	0x6d, 0x35, 0x03, 0xd8, 0x6e, 0xdd, 0x95, 0x7d, 0xe2, 0xbd, 0xe1, 0xf7, 0xff, 0xbf, 0x37, 0x6f,
	0x66, 0x40, 0x5f, 0x16, 0x31, 0xaf, 0xac, 0x55, 0x59, 0xd4, 0x05, 0xee, 0x2f, 0xcb, 0xfc, 0xe2,
	0x45, 0x52, 0x14, 0x49, 0xc6, 0x5f, 0xca, 0xa5, 0x87, 0xf5, 0xef, 0x2f, 0xbf, 0x94, 0x6c, 0xb5,
	0xe2, 0x65, 0x0b, 0x5d, 0x7c, 0xff, 0xdf, 0xff, 0x75, 0xba, 0xe4, 0x55, 0xcd, 0x96, 0xab, 0x06,
	0x18, 0xff, 0x65, 0x80, 0x31, 0x2f, 0x62, 0x1e, 0xce, 0x79, 0x55, 0xb1, 0x84, 0x63, 0x0b, 0x06,
	0x82, 0x31, 0x95, 0x4b, 0xe5, 0x4a, 0xbf, 0xbe, 0xb0, 0x1a, 0x03, 0xab, 0x33, 0xb0, 0x68, 0x67,
	0x40, 0x24, 0x87, 0x31, 0x0c, 0x58, 0x1c, 0x97, 0x66, 0xef, 0x52, 0xb9, 0xd2, 0x88, 0x8c, 0xf1,
	0x1b, 0xd0, 0xc4, 0x37, 0xaa, 0xbf, 0xae, 0xb8, 0xd9, 0xbf, 0x54, 0xae, 0x46, 0xd7, 0x17, 0xd6,
	0xb2, 0xcc, 0xad, 0xdd, 0x4a, 0x96, 0x1d, 0xc7, 0x25, 0xfd, 0xba, 0xe2, 0x44, 0x65, 0x6d, 0x84,
	0x11, 0xf4, 0x97, 0x55, 0x62, 0x0e, 0xa4, 0x97, 0x08, 0xf1, 0x0f, 0x60, 0x54, 0x69, 0x92, 0xb3,
	0x2c, 0xca, 0xf8, 0x67, 0x9e, 0x99, 0x27, 0x97, 0xca, 0x95, 0x42, 0xf4, 0x66, 0x6d, 0x26, 0x96,
	0xf0, 0x0d, 0xa8, 0x19, 0xab, 0xd3, 0x7a, 0x1d, 0x73, 0xf3, 0x54, 0x76, 0xfd, 0xed, 0x5e, 0xd7,
	0x4e, 0xb1, 0x7e, 0xc8, 0xf8, 0x07, 0x96, 0xad, 0x39, 0xd9, 0xd0, 0xf8, 0x16, 0xb4, 0xac, 0xc8,
	0x93, 0x46, 0x3a, 0x3c, 0x42, 0xba, 0xc5, 0xf1, 0x1b, 0x50, 0x59, 0xd6, 0x56, 0x55, 0xa5, 0xf4,
	0xf9, 0x9e, 0xd4, 0xcb, 0xeb, 0x57, 0xd7, 0x6d, 0xd1, 0x0e, 0xc6, 0x13, 0x38, 0xeb, 0xe2, 0x68,
	0x9d, 0xa7, 0xb5, 0xa9, 0xc9, 0x01, 0xbd, 0xf8, 0x9f, 0x01, 0xb5, 0xd8, 0x22, 0x4f, 0x6b, 0x62,
	0xb0, 0x9d, 0xec, 0x5f, 0x26, 0x72, 0xca, 0x70, 0xc8, 0x44, 0x4e, 0x7a, 0x63, 0x22, 0xa7, 0x7d,
	0x0b, 0x90, 0xe4, 0x55, 0x15, 0xc5, 0x3c, 0xab, 0x99, 0xa9, 0x1f, 0xde, 0x84, 0x26, 0x70, 0x47,
	0xd0, 0xf8, 0x35, 0x0c, 0x3f, 0x71, 0x16, 0xa7, 0x79, 0x62, 0x1a, 0x87, 0x85, 0x1d, 0x8b, 0x7f,
	0x01, 0xa3, 0x0d, 0x9b, 0xb6, 0xcf, 0x64, 0xdb, 0xdf, 0xed, 0xb7, 0x7d, 0xdf, 0x50, 0xb2, 0x6b,
	0xfd, 0xd3, 0x36, 0xc1, 0x3f, 0xc2, 0x49, 0xb5, 0xe2, 0x3c, 0x36, 0x47, 0x87, 0xcb, 0x36, 0xa4,
	0xd8, 0xa7, 0x0c, 0x9a, 0x92, 0xe7, 0xb2, 0xe4, 0xf3, 0xfd, 0x92, 0xa1, 0x60, 0x64, 0x41, 0xad,
	0xea, 0x42, 0x7c, 0x03, 0xda, 0x67, 0x5e, 0xd6, 0x51, 0xc9, 0x6a, 0x6e, 0xa2, 0x23, 0xce, 0x59,
	0xd0, 0x84, 0xd5, 0x1c, 0xdf, 0x03, 0xda, 0x28, 0xa3, 0xaa, 0x58, 0x97, 0x1f, 0xb9, 0xf9, 0xcd,
	0x51, 0xa7, 0x34, 0xea, 0x3c, 0x42, 0xa9, 0xc2, 0xd7, 0x70, 0x52, 0xfd, 0xc9, 0xbe, 0xfc, 0x61,
	0xe2, 0x47, 0xae, 0x68, 0x58, 0x97, 0x69, 0x9e, 0x74, 0x7b, 0x16, 0xa8, 0x78, 0x14, 0x1f, 0x59,
	0x96, 0x89, 0x77, 0x62, 0x3e, 0x3d, 0x42, 0xb6, 0xa1, 0xf1, 0x4f, 0xa0, 0xb1, 0xb4, 0x4c, 0xca,
	0x62, 0x9d, 0xc7, 0xe6, 0xb3, 0xc7, 0x86, 0x65, 0xa7, 0xe5, 0x54, 0x22, 0x64, 0x4b, 0x8f, 0xff,
	0x56, 0x40, 0xed, 0x5e, 0x35, 0xd6, 0x61, 0xb8, 0xf0, 0xdf, 0xf9, 0xc1, 0xaf, 0x3e, 0x7a, 0x82,
	0xcf, 0x40, 0xb3, 0x9d, 0xf0, 0x2e, 0xf2, 0x26, 0x76, 0x80, 0x14, 0x8c, 0xc0, 0xd8, 0xa4, 0x91,
	0x4f, 0x51, 0xaf, 0x05, 0x48, 0x03, 0xf4, 0x45, 0x4a, 0xbd, 0x8e, 0x1f, 0xe0, 0x11, 0x80, 0xe4,
	0x03, 0x7a, 0xef, 0x12, 0x74, 0xd2, 0xe6, 0xa4, 0xcd, 0x4f, 0x31, 0x86, 0x91, 0xc4, 0x29, 0xb1,
	0x27, 0xef, 0xde, 0x7a, 0x33, 0x17, 0x0d, 0x05, 0x23, 0xd7, 0x1a, 0x46, 0x1d, 0xbf, 0x06, 0x63,
	0xf7, 0x41, 0xe1, 0x73, 0xd0, 0xfd, 0x20, 0xb2, 0x67, 0xd4, 0xa3, 0x0b, 0xc7, 0x45, 0x4f, 0xb0,
	0x0a, 0x83, 0xb7, 0xae, 0x4b, 0x91, 0x82, 0x01, 0x4e, 0xe7, 0x2e, 0x75, 0x49, 0x88, 0x7a, 0xe3,
	0x9f, 0xb7, 0x32, 0xb9, 0xad, 0x67, 0x80, 0x76, 0x64, 0x11, 0xfd, 0xed, 0xbd, 0xd0, 0x8e, 0x00,
	0xee, 0x6c, 0x12, 0xcc, 0x5d, 0x4a, 0xbc, 0x09, 0x52, 0x84, 0xd7, 0xd4, 0x0f, 0x85, 0xfe, 0x16,
	0xf4, 0x9d, 0xbb, 0x8c, 0x9f, 0xc2, 0xb9, 0x1f, 0x44, 0xf7, 0xae, 0xed, 0x78, 0xfe, 0xb4, 0x53,
	0xab, 0x30, 0xa0, 0x64, 0xe1, 0x22, 0x05, 0x1b, 0xa0, 0xce, 0xed, 0xa9, 0xef, 0x52, 0x6f, 0x82,
	0x7a, 0xe3, 0x1b, 0xd0, 0x36, 0x97, 0x52, 0x40, 0x7e, 0xe0, 0x0b, 0xfc, 0x1c, 0xf4, 0x29, 0x09,
	0x16, 0xbe, 0x13, 0xbe, 0x77, 0x5d, 0x07, 0x29, 0x78, 0x08, 0x7d, 0xcf, 0x0e, 0x51, 0x4f, 0x04,
	0xd4, 0x0e, 0x51, 0x7f, 0x6c, 0x83, 0xb6, 0x39, 0x21, 0x31, 0xcc, 0x85, 0x3f, 0x71, 0x09, 0xb5,
	0x3d, 0x71, 0x16, 0x3a, 0x0c, 0x3d, 0xff, 0x83, 0x3d, 0xf3, 0x9c, 0x66, 0xab, 0x8d, 0x17, 0xea,
	0x89, 0xe2, 0xb6, 0x47, 0xee, 0x02, 0xe2, 0xbb, 0xa8, 0xff, 0x70, 0x2a, 0xef, 0xc9, 0xab, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x93, 0x4b, 0x0f, 0x75, 0x06, 0x00, 0x00,
}
